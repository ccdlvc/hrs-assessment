input {
  tcp {
    port => 5044
    codec => json
  }

  # Kafka input for CDC data (bookings and hotels)
  kafka {
    bootstrap_servers => "kafka:9092"
    topics => ["connect.hrs_booking.bookings", "connect.hrs_booking.hotels"]
    group_id => "logstash-cdc-group"
    codec => json
  }
}

filter {
  if ![span][id] and [mdc][spanId] {
    mutate { rename => { "[mdc][spanId]" => "[span][id]" } }
  }
  if ![trace][id] and [mdc][traceId] {
    mutate { rename => {"[mdc][traceId]" => "[trace][id]"} }
  }
  
  # Filter for Kafka CDC data
  if [type] == "kafka" {
    json { source => "message" }
    mutate { add_tag => ["cdc", "mysql"] }

    if [topic] == "connect.hrs_booking.bookings" {
      mutate { add_field => { "document_type" => "booking" } }
    } else if [topic] == "connect.hrs_booking.hotels" {
      mutate { add_field => { "document_type" => "hotel" } }
    }
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "quarkus-logs-%{+YYYY.MM.dd}"
    user => "${ELASTIC_USERNAME:elastic}"
    password => "${ELASTIC_PASSWORD:hrs.com}"
    ssl => false
  }

  # Elasticsearch Output for Booking CDC Data
  if [document_type] == "booking" {
    elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      index => "bookings"
      document_id => "%{[payload][after][id]}"
      user => "${ELASTIC_USERNAME:elastic}"
      password => "${ELASTIC_PASSWORD:hrs.com}"
      ssl => false
    }
  }

  # Elasticsearch Output for Hotel CDC Data
  if [document_type] == "hotel" {
    elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      index => "hotels"
      document_id => "%{[payload][after][id]}"
      user => "${ELASTIC_USERNAME:elastic}"
      password => "${ELASTIC_PASSWORD:hrs.com}"
      ssl => false
    }
  }

  # Debugging Output
  stdout { codec => rubydebug }
}
